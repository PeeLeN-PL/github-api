{"version":3,"sources":["reducer/error.reducer.js","reducer/index.js","store.js","actions/default.js","hooks/Error/Error.js","hooks/Nav/Nav.js","hooks/Factorial/Factorial.js","hooks/Projects/List/List.js","hooks/Projects/Projects.js","hooks/Requirements/Requirements.js","App.js","index.js"],"names":["reducer","state","message","action","type","payload","combineReducers","error","middleware","applyMiddleware","promise","thunk","createStore","reducerSET","data","setStore","dispatch","a","Error","useDispatch","_error","useSelector","useState","count","setCount","callback","delay","savedCallback","React","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","className","Nav","to","errors","Factorial","number","setNumber","result","setResult","history","setHistory","inputRef","getHistory","focus","handleSubmit","evt","preventDefault","values","Object","target","reduce","obj","field","name","value","score","factorial","Infinity","addToHistory","e","n","time","Date","now","history_data","JSON","parse","localStorage","getItem","push","setItem","stringify","reverse","onSubmit","min","ref","length","map","item","toLocaleString","List","props","username","setUsername","projects","setProjects","commits","setCommits","getProjects","user","fetch","response_repos","json","repos","Array","isArray","repos_sort","sortData","slice","sort","b","updated_at","getTime","getCommits","url","repo_id","commits_data_2","assign","response_commits","commits_data","splice","undefined","onClick","commits_url","replace","commit","index","created_at","defaultProps","Projects","setName","setUser","getUser","user_data","response_user","onChange","login","Requirements","App","exact","path","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.fcde539b.chunk.js","sourcesContent":["const reducer = (state = {\r\n    message: false,\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"ERROR_SET_MESSAGE\": {\r\n            return { ...state, message: action.payload }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default reducer;","import { combineReducers } from 'redux';\r\n\r\nimport error from './error.reducer'\r\n\r\nexport default combineReducers({\r\n    error\r\n})","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport promise from 'redux-promise-middleware'\r\nimport reducer from \"./reducer\";\r\n\r\nconst middleware = applyMiddleware(promise,thunk)\r\nexport default createStore(reducer, middleware);","export const reducerSET = (data, setStore) => {\r\n    return async (dispatch) => {\r\n        await dispatch({\r\n            type: setStore,\r\n            payload: data\r\n        })\r\n        return data;\r\n    }\r\n}","// @snippet\r\nimport React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { reducerSET } from \"../../actions/default\"\r\n\r\n\r\nconst useInterval = (callback, delay) => {\r\n    const savedCallback = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    React.useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n};\r\n\r\n\r\nconst Error = () => {\r\n\r\n    // redux ->\r\n    const dispatch = useDispatch();\r\n    const _error = useSelector(state => state.error)\r\n    // <- redux\r\n\r\n\r\n\r\n    const timeInterval = 5 // w sekundach;\r\n    let [count, setCount] = useState(timeInterval);\r\n\r\n    useInterval(() => {\r\n        setCount(count - 1);\r\n        if (count === 1) {\r\n            dispatch(reducerSET(false, 'ERROR_SET_MESSAGE'))\r\n        }\r\n    }, 1000);\r\n\r\n\r\n    return (\r\n        <>\r\n            {_error.message ? <div id=\"error\" className=\"error\">\r\n                <div className=\"error__message\">{_error.message}</div>\r\n                <div className=\"error__counter\">Komunikat wyłączy się za: <strong>{count}</strong> sek.</div>\r\n            </div> : null}\r\n        </>\r\n    )\r\n\r\n}\r\nexport default Error","// @snippet\r\nimport React from 'react';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav id=\"nav\">\r\n            <ul>\r\n                <li><Link to=\"/\">Wyszukiwarka projektów githubowych</Link></li>\r\n                <li><Link to=\"/requirements\">Założenia całej aplikacji</Link></li>\r\n                <li><Link to=\"/factorial\">Wyliczanie silni</Link></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\nexport default Nav","// @snippet\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\nimport { reducerSET } from \"../../actions/default\"\r\n\r\nconst errors = {\r\n    \"RangeError: Maximum call stack size exceeded\": \"Przekroczono maksymalny rozmiar stosu wywołań\"\r\n}\r\n\r\nconst Factorial = () => {\r\n\r\n    // redux ->\r\n    const dispatch = useDispatch();\r\n    // <- redux\r\n\r\n\r\n    const [number, setNumber] = useState(false);\r\n    const [result, setResult] = useState(false);\r\n    const [history, setHistory] = useState(false);\r\n    const inputRef = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        getHistory()\r\n        inputRef.current.focus();\r\n    }, []);\r\n\r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n        const values = Object.values(evt.target).reduce((obj, field) => {\r\n            if (field.name) {\r\n                obj[field.name] = field.value;\r\n            }\r\n            return obj\r\n        }, {})\r\n        count(values['number']);\r\n    }\r\n\r\n    const count = (value) => {\r\n        if (value > 0) {\r\n            try {\r\n                let score = factorial(value)\r\n                if (score === Infinity) {\r\n                    score = \"nieskonczoność\"\r\n                }\r\n                setNumber(value);\r\n                setResult(score);\r\n                addToHistory(value, score)\r\n            } catch (e) {\r\n                setResult(false);\r\n                dispatch(reducerSET(errors[e.message] || e.message, 'ERROR_SET_MESSAGE'))\r\n            }\r\n        } else {\r\n            setResult(false);\r\n            dispatch(reducerSET('brak wartości', 'ERROR_SET_MESSAGE'))\r\n        }\r\n    }\r\n\r\n    const factorial = (n) => {\r\n        if ((n === 0) || (n === 1)) return 1;\r\n        else {\r\n            return n * factorial(n - 1)\r\n        }\r\n    }\r\n\r\n    const addToHistory = (number, result) => {\r\n        const data = {\r\n            number,\r\n            result,\r\n            time: Date.now()\r\n        }\r\n        const history_data = JSON.parse(localStorage.getItem('factorial_history')) || [];\r\n        history_data.push(data);\r\n        localStorage.setItem('factorial_history', JSON.stringify(history_data));\r\n        setHistory(history_data.reverse());\r\n    }\r\n\r\n    const getHistory = () => {\r\n        const history_data = JSON.parse(localStorage.getItem('factorial_history')) || [];\r\n        setHistory(history_data.reverse());\r\n    }\r\n\r\n    return (\r\n        <div className=\"factorial\">\r\n            <h1>Wyliczanie slini</h1>\r\n            <form onSubmit={handleSubmit} className=\"factorial__form form\">\r\n                <p className=\"form__label\">Podaj liczbę:</p>\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"number\"\r\n                    min=\"1\"\r\n                    className=\"form__input\"\r\n                    ref={inputRef}\r\n                />\r\n                <button type=\"submit\" className=\"form__button\">Oblicz</button>\r\n            </form>\r\n            {result ?\r\n                <div className=\"factorial__result\">\r\n                    <p>Silnia z liczby <strong>{number}</strong> to: <strong>{result}</strong></p>\r\n                </div> : null}\r\n            {history && history.length ?\r\n                <div className=\"factorial__history\">\r\n                    <h2 className=\"factorial__history__label\">Historia poprzednich wyliczeń:</h2>\r\n                    <ul className=\"factorial__history__list history list\">\r\n                        {history.map(item => {\r\n                            return <li className=\"factorial__history__list__item list__item\" key={`item_${item.time}`}>\r\n                                <div className=\"factorial__history__list__item__math-data\">\r\n                                    <div className=\"factorial__history__list__item__number\">Podana liczba: <strong>{item.number}</strong></div>\r\n                                    <div className=\"factorial__history__list__item__result\">Wynik: <strong>{item.result}</strong></div>\r\n                                </div>\r\n                                <div className=\"factorial__history__list__item__date\">Data wyliczenia: {new Date(item.time).toLocaleString()}</div>\r\n                            </li>\r\n                        })}\r\n                    </ul></div> : null}\r\n        </div >\r\n    )\r\n\r\n}\r\nexport default Factorial","// @snippet\r\nimport React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { reducerSET } from \"../../../actions/default\"\r\n\r\nconst errors = {\r\n    \"Git Repository is empty.\": \"Repozytorium Git jest puste.\"\r\n}\r\n\r\n\r\nconst List = (props) => {\r\n\r\n    // redux ->\r\n    const dispatch = useDispatch();\r\n    // <- redux\r\n    const [username, setUsername] = useState(props.username);\r\n    const [projects, setProjects] = useState(false);\r\n    const [commits, setCommits] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        setUsername(props.username)\r\n        getProjects(props.username);\r\n    }, [props.username]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    const getProjects = async (user) => {\r\n        const response_repos = await fetch(`https://api.github.com/users/${user}/repos`);\r\n        const repos = await response_repos.json();\r\n        dispatch(reducerSET(false, 'ERROR_SET_MESSAGE'))\r\n        if (Array.isArray(repos)) {\r\n            const repos_sort = sortData(repos)\r\n            setProjects(repos_sort.slice(0, 5));\r\n            if (!repos.length) {\r\n                dispatch(reducerSET('Ten użytkownik nie posiada repozytoriów', 'ERROR_SET_MESSAGE'))\r\n            }\r\n        }\r\n    }\r\n\r\n    const sortData = (data) => {\r\n        return data.sort((a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime());\r\n    }\r\n\r\n    const getCommits = async (url, repo_id) => {\r\n        const commits_data_2 = Object.assign({}, commits)\r\n        const response_commits = await fetch(url);\r\n        const commits_data = await response_commits.json();\r\n        dispatch(reducerSET(false, 'ERROR_SET_MESSAGE'))\r\n        if (Array.isArray(commits_data)) {\r\n            commits_data_2[repo_id] = commits_data.splice(0, 5);\r\n        } else {\r\n            commits_data_2[repo_id] = false;\r\n            dispatch(reducerSET(errors[commits_data.message], 'ERROR_SET_MESSAGE'))\r\n        }\r\n        setCommits(commits_data_2);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {projects && projects.length ?\r\n                <div className=\"projects__list\">\r\n                    <h2 className=\"projects__list__label\">Repozytoria użytkownika <span className=\"projects__list__label__user\">{username}</span>:</h2>\r\n                    <ol className=\"projects__list__items list\">\r\n                        {projects.map((item) => {\r\n                            return <li className=\"projects__list__items__item list__item\" key={`projects__${item.created_at}`}>\r\n                                <div className=\"projects__list__items__item__section--left\">\r\n                                    <div className=\"projects__list__items__item__name\">{item.name}</div>\r\n                                    <div className=\"projects__list__items__item__update-at\">{new Date(item.updated_at).toLocaleString()}</div>\r\n                                </div>\r\n                                <div className=\"projects__list__items__item__section--right\">\r\n                                    {commits[item.id] === undefined ? <span onClick={() => getCommits(item.commits_url.replace('{/sha}', ''), item.id)} className=\"projects__list__items__item__button\">pobierz commity</span> : null}\r\n                                </div>\r\n                                {commits[item.id] && commits[item.id].length ? <ul className=\"projects__list__items__item__commits\">\r\n                                    {commits[item.id].map((commit, index) => {\r\n                                        return <li key={`projects__${item.created_at}__commit__${index}`}>{commit.commit.message}</li>\r\n                                    })}\r\n                                </ul> : null}\r\n                            </li>\r\n                        })}\r\n                    </ol>\r\n                </div> : null}\r\n        </>\r\n    )\r\n\r\n}\r\nexport default List\r\n\r\nList.defaultProps = {\r\n    username: false\r\n}\r\n\r\nList.propTypes = {\r\n    username: PropTypes.string\r\n}","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { reducerSET } from \"../../actions/default\"\r\n\r\nimport ProjectsList from \"./List/List\"\r\n\r\n\r\nconst errors = {\r\n  \"Not Found\": \"Nie ma takiego użytkownika na GitHub\"\r\n}\r\n\r\nfunction Projects() {\r\n\r\n  // redux ->\r\n  const dispatch = useDispatch();\r\n  // <- redux\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [user, setUser] = useState(false);\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    dispatch(reducerSET(false, 'ERROR_SET_MESSAGE'))\r\n    if (name) {\r\n      const user_data = await getUser();\r\n      setUser(user_data);\r\n      if (user_data.message) {\r\n        dispatch(reducerSET(errors[user_data.message] || user_data.message, 'ERROR_SET_MESSAGE'))\r\n      }\r\n    } else {\r\n      setUser(false);\r\n      dispatch(reducerSET('brak loginu', 'ERROR_SET_MESSAGE'))\r\n    }\r\n  }\r\n\r\n  const getUser = async () => {\r\n    const response_user = await fetch(`https://api.github.com/users/${name}`);\r\n    const user = await response_user.json();\r\n    return user;\r\n  }\r\n\r\n  return (\r\n    <div className=\"projects\">\r\n      <h1>Wyszukiwarka projektów githubowych</h1>\r\n      <form onSubmit={handleSubmit} className=\"projects__form form\">\r\n        <p className=\"form__label\">Podaj login z GitHub:</p>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n          className=\"form__input\"\r\n          ref={inputRef}\r\n        />\r\n        <button type=\"submit\" className=\"form__button\">Pobierz</button>\r\n      </form>\r\n      {user && !user.message ? <ProjectsList username={user.login} /> : null}\r\n    </div>\r\n  );\r\n}\r\nexport default Projects;","// @snippet\r\nimport React from 'react';\r\n\r\nconst Requirements = () => {\r\n    return (\r\n        <div id=\"Requirements\">\r\n            <h1>Założenia aplikacji</h1>\r\n            <p>Aplikacja ma się składać z minimum 3 ekranów:</p>\r\n            <ol>\r\n                <li> Wyszukiwarka projektów githubowych</li>\r\n                <li>Założenia całej aplikacji</li>\r\n                <li>Wyliczanie silni</li>\r\n            </ol>\r\n            <p>Ad 1</p>\r\n            <ul>\r\n                <li>Wykorzystane jest publiczne API Githuba;</li>\r\n                <li>Czeka na podanie loginu użytkownika:\r\n                            <ul>\r\n                        <li>waliduje poprawność;</li>\r\n                        <li>obsługuje nieistniejące loginy;</li>\r\n                    </ul>\r\n                </li>\r\n                <li>wyświetla maksymalnie 5 projektów w kolejności od ostatnio updatowanego:\r\n                            <ul>\r\n                        <li>wyświetla maksymalnie 5 commitów każdego z projektów; </li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n            <p>Ad 2</p>\r\n            <ul>\r\n                <li>wyświetla niniejszą treść (listę wymagań) z podobnym (takim samym) podziałem i układem; </li>\r\n                <li>proszę zawrzeć też autora aplikacji - własne imię i nazwisko; </li>\r\n            </ul>\r\n            <p>Ad 3</p>\r\n            <ul>\r\n                <li>input do podania liczby dla której będzie wyliczona silnia;</li>\r\n                <li>historia poprzednich wyliczeń. </li>\r\n            </ul>\r\n            <p>Ogólne</p>\r\n            <ul>\r\n                <li>korzysta z <b>LESS / SASS</b>. Spełnia wymogi <b>BEM</b>. Jest też <b>estetyczna;</b></li>\r\n                <li>wyświetla <b>co drugi</b> element każdej listy wyróżnionym kolorem;</li>\r\n                <li>jest <b>hostowana </b>(github pages, heroku, itd..), a jej kod jest dostępny <b>publicznie</b>; </li>\r\n                <li>Miło widziane użycie <b>middlewarów reduxowych</b>.</li>\r\n            </ul>\r\n            <p>Autor: Paweł Mieczkowski</p>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Requirements\r\n","\n\nimport React from \"react\";\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\n//pages\nimport Error from \"./hooks/Error/Error\";\nimport Nav from \"./hooks/Nav/Nav\";\nimport Factorial from \"./hooks/Factorial/Factorial\";\nimport Projects from \"./hooks/Projects/Projects\";\nimport Requirements from \"./hooks/Requirements/Requirements\";\n\nfunction App() {\n\n  // redux ->\n  const _error = useSelector(state => state.error)\n  // <- redux\n\n\n  return (\n    <div>\n      <Nav />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Projects />\n          </Route>\n          <Route path=\"/factorial\">\n            <Factorial />\n          </Route>\n          <Route path=\"/requirements\">\n            <Requirements />\n          </Route>\n        </Switch>\n      </div>\n      {_error.message ? <Error /> : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './sass/style.scss';\nimport { HashRouter } from \"react-router-dom\";\n\n\n\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}